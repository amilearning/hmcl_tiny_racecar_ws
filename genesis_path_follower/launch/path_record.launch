<?xml version="1.0"?>

<launch>
  <!-- This launch file is intended to aid in recording a path with GPS.  State publishing and GPS plotting are enabled. -->

	<!-- Pick between CPG + RFS coordinate systems here. -->
	<!--rosparam command="load" file="$(find genesis_path_follower)/launch/rfs.yaml" ns="vehicle"/-->
	 <param name="vehicle/scripts_dir" type="str" value="$(find genesis_path_follower)/scripts/" />
  <rosparam command="load" file="$(find genesis_path_follower)/launch/simulation.yaml" ns="vehicle"/>

 

  <!-- Waypoints CSV to specify path. -->
  <!-- <param name="vehicle/mat_waypoints" type="str" value="$(find genesis_path_follower)/paths/state_est_outloop2.mat" /> -->
  <!-- <param name="vehicle/mat_waypoints" type="str" value="$(find genesis_path_follower)/paths/cpg_fast_lap.mat" /> -->
  

  <!--...................................................................-->

  <!-- State Publishing and Plotting Nodes -->
  <node ns="vehicle" pkg="genesis_path_follower" type="state_publisher.py" name="state_pub_node" output="screen"/>
  <!-- <node ns="vehicle" pkg="genesis_path_follower" type="gps_vehicle_plotter.py" name="plot_node" output="log"/> -->

  <!-- Recording Node -->
  <arg name="exclude_topics" default="/image_raw"/>

  <!-- <node pkg="rosbag" type="record" name="rosbag_path_recorder" respawn="true" output="screen" 
        args="-a -o $(find genesis_path_follower)/bags/path_record -x $(arg exclude_topics)" /> -->

</launch>
